{"version":3,"sources":["components/statistics/StatisticsStyles.module.css","components/feedback/FeedbackStyles.module.css","components/section/SectionStyles.module.css","components/notification/NotificationStyles.module.css","components/feedback/FeedbackOptions.js","components/section/Section.js","components/statistics/Statistics.js","components/notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","Object","entries","map","el","key","type","onClick","name","value","className","FeedbackStyles","button","Section","title","children","SectionStyles","section__title","Statistics","total","positiveFeedback","StatisticsStyles","statistic__list","statistic__item","statistic__name","statistic__value","Notification","message","NotificationStyles","notification__message","App","state","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","positiveFeedbackPercentage","toFixed","Number","event","target","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,gBAAkB,0CAA0C,gBAAkB,0CAA0C,gBAAkB,0CAA0C,iBAAmB,6C,qBCAzND,EAAOC,QAAU,CAAC,OAAS,iC,gBCA3BD,EAAOC,QAAU,CAAC,eAAiB,wC,gBCAnCD,EAAOC,QAAU,CAAC,sBAAwB,oD,8LCG3B,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAEjD,OACE,oCACGC,OAAOC,QAAQH,GAASI,KAAI,SAAAC,GAAE,OAC7B,4BACEC,IAAKD,EAAG,GACRE,KAAK,SACLC,QAASP,EACTQ,KAAMJ,EAAG,GACTK,MAAOL,EAAG,GACVM,UAAWC,IAAeC,QAEzBR,EAAG,Q,oBCbC,SAASS,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,wBAAIL,UAAWM,IAAcC,gBAAiBH,GAC7CC,G,oBCJQ,SAASG,EAAT,GAA2D,IAArCnB,EAAoC,EAApCA,QAASoB,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,iBACnD,OACE,wBAAIV,UAAWW,IAAiBC,iBAC7BrB,OAAOC,QAAQH,GAASI,KAAI,SAAAC,GAAE,OAC7B,wBAAIM,UAAWW,IAAiBE,gBAAiBlB,IAAKD,EAAG,IACvD,uBAAGM,UAAWW,IAAiBG,iBAAkBpB,EAAG,GAApD,KACA,uBAAGM,UAAWW,IAAiBI,kBAAmBrB,EAAG,QAIzD,wBAAIM,UAAWW,IAAiBE,iBAC9B,uBAAGb,UAAWW,IAAiBG,iBAA/B,UACA,uBAAGd,UAAWW,IAAiBI,kBAAmBN,IAEpD,wBAAIT,UAAWW,IAAiBE,iBAC9B,uBAAGb,UAAWW,IAAiBG,iBAA/B,sBACA,uBAAGd,UAAWW,IAAiBI,kBAAmBL,EAAlD,O,oBChBO,SAASM,EAAT,GAAmC,IAAXC,EAAU,EAAVA,QACrC,OAAO,uBAAGjB,UAAWkB,IAAmBC,uBAAwBF,G,ICE7CG,E,4MACjBC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTC,mBAAqB,WAAO,IAAD,EACQ,EAAKJ,MAEpC,OAHuB,EACfC,KADe,EACTC,QADS,EACAC,K,EAI3BE,gCAAkC,WAAO,IAE/BC,GADW,EAAKN,MAAdC,KAEK,EAAKG,qBAAwB,KAAKG,QAAQ,GACvD,OAAOC,OAAOF,I,EAElBrC,gBAAkB,SAAAwC,GAAU,IAChBhC,EAASgC,EAAMC,OAAfjC,KAER,EAAKkC,UAAS,SAAAC,GAAS,sBAAQnC,EAAOmC,EAAUnC,GAAQ,O,uDAOxD,OACI,oCACI,kBAACK,EAAD,CAASC,MAAM,yBACX,kBAAChB,EAAD,CACIC,QAAS6C,KAAKb,MACd/B,gBAAiB4C,KAAK5C,mBAG9B,kBAACa,EAAD,CAASC,MAAM,aACV8B,KAAKT,qBAAuB,EACzB,kBAACjB,EAAD,CACAnB,QAAS6C,KAAKb,MAIVZ,MAAOyB,KAAKT,qBACZf,iBAAkBwB,KAAKR,oCAG3B,kBAAEV,EAAF,CAAeC,QAAQ,4B,GA/CdkB,aCFjCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KAAmB,kBAAC,EAAD,OACnBC,SAASC,eAAe,W","file":"static/js/main.1c4c4ca8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic__list\":\"StatisticsStyles_statistic__list__W1zri\",\"statistic__item\":\"StatisticsStyles_statistic__item__IDcdN\",\"statistic__name\":\"StatisticsStyles_statistic__name__1_xvm\",\"statistic__value\":\"StatisticsStyles_statistic__value__PC-yx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackStyles_button__K1kKy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__title\":\"SectionStyles_section__title__hWmgZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification__message\":\"NotificationStyles_notification__message__bgqo9\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackStyles from './FeedbackStyles.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  //  console.log('options',Object.entries(options).map(el=>el));\r\n  return (\r\n    <>\r\n      {Object.entries(options).map(el => (\r\n        <button\r\n          key={el[0]}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n          name={el[0]}\r\n          value={el[1]}\r\n          className={FeedbackStyles.button}\r\n        >\r\n          {el[0]}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SectionStyles from './SectionStyles.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2 className={SectionStyles.section__title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React from 'react';\r\nimport StatisticsStyles from './StatisticsStyles.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({ options, total, positiveFeedback }) {\r\n  return (\r\n    <ul className={StatisticsStyles.statistic__list}>\r\n      {Object.entries(options).map(el => (\r\n        <li className={StatisticsStyles.statistic__item} key={el[0]}>\r\n          <p className={StatisticsStyles.statistic__name}>{el[0]}:</p>\r\n          <p className={StatisticsStyles.statistic__value}>{el[1]}</p>\r\n        </li>\r\n      ))}\r\n\r\n      <li className={StatisticsStyles.statistic__item}>\r\n        <p className={StatisticsStyles.statistic__name}>Total:</p>\r\n        <p className={StatisticsStyles.statistic__value}>{total}</p>\r\n      </li>\r\n      <li className={StatisticsStyles.statistic__item}>\r\n        <p className={StatisticsStyles.statistic__name}>Positive feedback:</p>\r\n        <p className={StatisticsStyles.statistic__value}>{positiveFeedback}%</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  options: PropTypes.shape({\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  }).isRequired,\r\n\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NotificationStyles from \"./NotificationStyles.module.css\"\r\n\r\nexport default function Notification({ message }){\r\n  return <p className={NotificationStyles.notification__message}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from './components/feedback/FeedbackOptions';\nimport Section from './components/section/Section';\nimport Statistics from './components/statistics/Statistics';\nimport Notification from './components/notification/Notification';\n\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    countTotalFeedback = () => {\n        const { good, neutral, bad } = this.state;\n        const totalFeedback = good + neutral + bad;\n        return totalFeedback;\n    };\n    countPositiveFeedbackPercentage = () => {\n        const { good } = this.state;\n        const positiveFeedbackPercentage =\n            ((good / this.countTotalFeedback()) * 100).toFixed(1);\n        return Number(positiveFeedbackPercentage);\n    };\n    onLeaveFeedback = event => {\n        const { name } = event.target;\n        // console.log(event.target);\n        this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n        \n    };\n\n    render() {\n        // const { good, neutral, bad } = this.state;\n\n        return (\n            <>\n                <Section title=\"Please leave feedback\">\n                    <FeedbackOptions\n                        options={this.state}\n                        onLeaveFeedback={this.onLeaveFeedback}\n                    />\n                </Section>\n                <Section title=\"Statistic\">\n                    {this.countTotalFeedback() > 0 ? (\n                        <Statistics\n                        options={this.state}\n                            // good={good}\n                            // neutral={neutral}\n                            // bad={bad}\n                            total={this.countTotalFeedback()}\n                            positiveFeedback={this.countPositiveFeedbackPercentage()}\n                        />\n                    ) : (\n                        < Notification message=\"No feedback given\" />\n                    )\n                    }\n                </Section>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>{<App />}</React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}